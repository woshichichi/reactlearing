{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:1337/api/'\n  }),\n\n  endpoints(build) {\n    return {\n      register: build.mutation({\n        query(user) {\n          return {\n            url: 'auth/local/register',\n            method: \"post\",\n            body: user\n          };\n        }\n\n      })\n    };\n  }\n\n});\nexport const {\n  useRegisterMutation\n} = authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","reducerPath","baseQuery","baseUrl","endpoints","build","register","mutation","query","user","url","method","body","useRegisterMutation"],"sources":["/Users/qianhe/Desktop/workspace/case/Test/reactlearing/src/store/api/authApi.js"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/dist/query/react'\n\n\nexport const authApi = createApi(\n    {\n        reducerPath:'authApi',\n        baseQuery:fetchBaseQuery({\n            baseUrl:'http://localhost:1337/api/'\n        }),\n        endpoints(build){\n            return {\n                register: build.mutation({\n                    query(user) {\n                        return {\n                            url:'auth/local/register',\n                            method:\"post\",\n                            body:user,\n                        }\n                    }\n                }),\n            }\n        }\n    }\n);\n\nexport const {\n    useRegisterMutation\n} = authApi;\n"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,cAAnB,QAAwC,mCAAxC;AAGA,OAAO,MAAMC,OAAO,GAAGF,SAAS,CAC5B;EACIG,WAAW,EAAC,SADhB;EAEIC,SAAS,EAACH,cAAc,CAAC;IACrBI,OAAO,EAAC;EADa,CAAD,CAF5B;;EAKIC,SAAS,CAACC,KAAD,EAAO;IACZ,OAAO;MACHC,QAAQ,EAAED,KAAK,CAACE,QAAN,CAAe;QACrBC,KAAK,CAACC,IAAD,EAAO;UACR,OAAO;YACHC,GAAG,EAAC,qBADD;YAEHC,MAAM,EAAC,MAFJ;YAGHC,IAAI,EAACH;UAHF,CAAP;QAKH;;MAPoB,CAAf;IADP,CAAP;EAWH;;AAjBL,CAD4B,CAAzB;AAsBP,OAAO,MAAM;EACTI;AADS,IAETb,OAFG"},"metadata":{},"sourceType":"module"}